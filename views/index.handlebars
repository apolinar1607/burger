<div class="container px-5">
    <div class="row justify-content-between">
        <div class="col-4 gy-5">
            <ul class="list-group">
                {{#each burgers}}
                {{#unless devoured}}
                <li class="list-group-item">{{id}}. {{burger_name}} &nbsp;<button
                        class="btn btn-outline-secondary change-devour" data-id="{{id}}">Devoured</button>
                </li>
                {{/unless}}
                {{/each}}
            </ul>
        </div>
        <div class="col-4 gy-5">
            <ul class="list-group">
                {{#each burgers}}
                {{#if devoured}}
                <li class="list-group-item">{{id}}. {{burger_name}}</li>
                {{/if}}
                {{/each}}
            </ul>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-6 px-3 gy-5">
            <form class="align-self-center">
                <div class="mb-3">
                    <textarea class="form-control" id="burger-textarea" rows="3"></textarea>
                </div>
                <div class="d-grid gap-2 d-md-flex justify-content-center">
                    <button class="btn btn-primary me-md-2" id="submit-burger" type="submit">Submit</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <script>
        //Make sure we wait to attach our handlers until the DOM is fully loaded
        document.addEventListener('DOMContentLoaded', (event) => {
            if (event) {
                console.info('DOM loaded');
            }

            //Setup the event listener for the submit button
            const submitBurgerBtn = document.getElementById("submit-burger");
            const burgerTextArea = document.getElementById("burger-textarea");
            console.log(submitBurgerBtn);
            submitBurgerBtn.addEventListener('click', (event) => {
                //event.preventDefault();
                console.log('submitButton clicked');
                const newBurger = {
                    burger_name: burgerTextArea.value.trim(),
                    devoured: false
                };
                console.log(newBurger);
                // Send POST request to create a new quote
                fetch('/api/burgers', {
                    method: 'POST',
                    headers: {
                        Accept: 'application/json',
                        'Content-Type': 'application/json',
                    },

                    // Make sure to serialize the JSON body
                    body: JSON.stringify(newBurger),
                }).then(() => {
                    // Empty the form
                    burgerTextArea.value = '';

                    // Reload the page so the user can see the new quote
                    console.log('Created a new burger!');
                    location.reload();
                });

            })
            //UPDATE
            //Pick up the class for all buttons
            const changeDevourBtns = document.querySelectorAll('.change-devour');
            //Set up the event listener for all the devoured buttons
            if (changeDevourBtns) {
                changeDevourBtns.forEach((button) => {
                    button.addEventListener('click', (e) => {
                    console.log("Update event triggered!");
                    const id = e.target.getAttribute("data-id");
                    const newDevourState = { devoured: true };
                    fetch(`/api/burgers/${id}`, {
                        method: 'PUT',
                        headers: {
                            Accept: 'application/json',
                            'Content-type': 'application/json'
                        },
                        body: JSON.stringify(newDevourState),
                    }).then((response) => {
                        if (response.ok) {
                            console.log(`changes devoured to: ${newDevourState}`);
                            location.reload('/')
                        } else {
                            alert('something went wrong!');
                        }
                    });
                });
                })
            }
        })
        
    </script>